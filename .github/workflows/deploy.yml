name: CI/CD - Build, Push, Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/lemp-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/lemp-frontend
  TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.BACKEND_IMAGE }}:latest
            ${{ env.BACKEND_IMAGE }}:${{ env.TAG }}

      - name: Build & push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.FRONTEND_IMAGE }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build-and-push ]
    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Pull & restart stack on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          SSH_USER: ${{ secrets.SSH_USER }}
          REMOTE_DIR: ${{ secrets.REMOTE_DIR }}
        run: |
          ssh -p "$SSH_PORT" $SSH_USER@$SSH_HOST "cd $REMOTE_DIR && \
            docker compose --env-file .env pull && \
            docker compose --env-file .env up -d && \
            docker compose ps"
